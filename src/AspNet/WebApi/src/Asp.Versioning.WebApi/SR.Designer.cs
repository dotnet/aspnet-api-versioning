//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Asp.Versioning {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Asp.Versioning.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} on type {1}.
        /// </summary>
        internal static string ActionSelector_AmbiguousMatchType {
            get {
                return ResourceManager.GetString("ActionSelector_AmbiguousMatchType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No action was found on the controller &apos;{0}&apos; that matches the name &apos;{1}&apos;..
        /// </summary>
        internal static string ApiControllerActionSelector_ActionNameNotFound {
            get {
                return ResourceManager.GetString("ApiControllerActionSelector_ActionNameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No action was found on the controller &apos;{0}&apos; that matches the request..
        /// </summary>
        internal static string ApiControllerActionSelector_ActionNotFound {
            get {
                return ResourceManager.GetString("ApiControllerActionSelector_ActionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple actions were found that match the request: {0}.
        /// </summary>
        internal static string ApiControllerActionSelector_AmbiguousMatch {
            get {
                return ResourceManager.GetString("ApiControllerActionSelector_AmbiguousMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested resource does not support HTTP method &apos;{0}&apos;..
        /// </summary>
        internal static string ApiControllerActionSelector_HttpMethodNotSupported {
            get {
                return ResourceManager.GetString("ApiControllerActionSelector_HttpMethodNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An API version is required, but was not specified..
        /// </summary>
        internal static string ApiVersionUnspecified {
            get {
                return ResourceManager.GetString("ApiVersionUnspecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value cannot be an empty string..
        /// </summary>
        internal static string Argument_EmptyString {
            get {
                return ResourceManager.GetString("Argument_EmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No route providing a controller name was found to match request URI &apos;{0}&apos;..
        /// </summary>
        internal static string ControllerNameNotFound {
            get {
                return ResourceManager.GetString("ControllerNameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A cycle was detected in a call to IHttpControllerSelector.GetControllerMapping()..
        /// </summary>
        internal static string ControllerSelectorMappingCycle {
            get {
                return ResourceManager.GetString("ControllerSelectorMappingCycle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple types were found that match the controller named &apos;{0}&apos;. This can happen if the route that services this request (&apos;{1}&apos;) found multiple controllers defined with the same name but differing namespaces, which is not supported.{3}{3}The request for &apos;{0}&apos; has found the following matching controllers:{2}.
        /// </summary>
        internal static string DefaultControllerFactory_ControllerNameAmbiguous_WithRouteTemplate {
            get {
                return ResourceManager.GetString("DefaultControllerFactory_ControllerNameAmbiguous_WithRouteTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No type was found that matches the controller named &apos;{0}&apos;..
        /// </summary>
        internal static string DefaultControllerFactory_ControllerNameNotFound {
            get {
                return ResourceManager.GetString("DefaultControllerFactory_ControllerNameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple controller types were found that match the URL. This can happen if attribute routes on multiple controllers match the requested URL.{1}{1}The request has found the following matching controller types: {0}.
        /// </summary>
        internal static string DirectRoute_AmbiguousController {
            get {
                return ResourceManager.GetString("DirectRoute_AmbiguousController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.{1} is an invalid value for {2}.{3}. Did you mean to apply {4} via attribute or convention instead?.
        /// </summary>
        internal static string InvalidDefaultApiVersion {
            get {
                return ResourceManager.GetString("InvalidDefaultApiVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A controller was not selected for request URI &apos;{0}&apos; and API version &apos;{1}&apos;..
        /// </summary>
        internal static string NoControllerSelected {
            get {
                return ResourceManager.GetString("NoControllerSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No service for type &apos;{0}&apos; has been registered..
        /// </summary>
        internal static string NoServiceRegistered {
            get {
                return ResourceManager.GetString("NoServiceRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No HTTP resource was found that matches the request URI &apos;{0}&apos;..
        /// </summary>
        internal static string ResourceNotFound {
            get {
                return ResourceManager.GetString("ResourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No route providing a controller name with API version &apos;{1}&apos; was found to match HTTP method &apos;{2}&apos; and request URI &apos;{0}&apos;..
        /// </summary>
        internal static string VersionedActionNameNotFound {
            get {
                return ResourceManager.GetString("VersionedActionNameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No route providing a controller name with API version &apos;{1}&apos; was found to match request URI &apos;{0}&apos;..
        /// </summary>
        internal static string VersionedControllerNameNotFound {
            get {
                return ResourceManager.GetString("VersionedControllerNameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested resource with API version &apos;{0}&apos; does not support the requested media type..
        /// </summary>
        internal static string VersionedMediaTypeNotSupported {
            get {
                return ResourceManager.GetString("VersionedMediaTypeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested resource with API version &apos;{0}&apos; does not support HTTP method &apos;{1}&apos;..
        /// </summary>
        internal static string VersionedMethodNotSupported {
            get {
                return ResourceManager.GetString("VersionedMethodNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HTTP resource that matches the request URI &apos;{0}&apos; does not support the API version &apos;{1}&apos;..
        /// </summary>
        internal static string VersionedResourceNotSupported {
            get {
                return ResourceManager.GetString("VersionedResourceNotSupported", resourceCulture);
            }
        }
    }
}
